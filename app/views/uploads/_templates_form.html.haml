= dialog_tag('Select Template and Asset Type', {:icon => 'fa fa-download', :class => "header-part"}) do
  = simple_form_for(:template_proxy,
    :url => create_template_uploads_url,
    :html => {:id => 'template_form', :class => 'form-vertical' },
    :wrapper => :vertical_form,                                                                                                                                                           :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes, :radio_buttons => :vertical_radio_and_checkboxes, :file => :vertical_file_input, :boolean => :vertical_boolean}) do |f|
    .col-sm-6
      = f.input :file_content_type_id, :required => true, :collection => FileContentType.active.select{|f| can? :read, f}, :label => "Template Type", :prompt => 'Set the spreadsheet contents...'
    .col-sm-6
      - if @organization_list.count == 1
        = f.input :organization_id, :as => :hidden, :input_html => { :value => @organization_list.first }
      - else
        = f.input :organization_id, :required => true, :collection => Organization.where(id: Policy.where('parent_id IS NOT NULL AND organization_id IN (?)', @organization_list).pluck(:organization_id)), :label_method => 'coded_name'
    .col-sm-6
      = f.input :asset_seed_class_id, :required => true, :collection => AssetType.active, :label => 'Asset Type', :prompt => "Select asset type..."
    .col-sm-6
      = f.button :submit, 'Create template', :class => 'btn btn-primary'

:javascript
  var new_inventory_id = parseInt('#{FileContentType.find_by(name: "New Inventory").id}');

  $('#template_form').validate({
    submitHandler: function(form) {
      form.submit();
    }
  });

  // Detect changes if new inventory selected
  $('#template_proxy_file_content_type_id').on('change', function(event) {
    if (parseInt($(this).val()) == new_inventory_id) {
      $('label[for="template_proxy_organization_id"] abbr').hide();
      $('#template_proxy_organization_id').removeClass('required');
      $('#template_proxy_organization_id').prop('required',false);
      $('#template_proxy_organization_id option').first().text('Multi Org');
    } else {
      $('label[for="template_proxy_organization_id"] abbr').show();
      $('#template_proxy_organization_id').addClass('required');
      $('#template_proxy_organization_id option').first().text('');
      $('.template_proxy_organization_id').show();
    }

  });
