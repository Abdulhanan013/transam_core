:css
  .flag-column {
    :width: 30px;
  }

#table_actions.btn-group
  - SystemConfig.transam_module_names.each do |mod|
    - if lookup_context.template_exists?("#{mod}_index_actions", 'assets', true)
      = render :partial => "assets/#{mod}_index_actions"

.table-responsive
  %table.table.table-condensed.table-hover{:id => 'asset_server_table',
    :data => {:toggle => 'table',
    :url => inventory_index_path(:format => :json),
    :card_view => "false", :show_refresh => "true",
    :pagination => 'true', :side_pagination => 'server',
    :show_pagination_switch => 'true',
    :page_list => "[5, 10, 20, 50, 100, 200]",
    :page_size => current_user.num_table_rows,
    :search => 'false',
    :show_columns => 'true',
    :toolbar => "#table_actions",
    :show_export => 'true',
    :row_style => 'row_style',
    :click_to_select => 'true',
    :query_params => "query_params",
    :show_export => 'true',
    :id_field => 'object_key',
    :export_types => "['csv', 'txt', 'excel']",
    :state_saved => 'true',
    :state_save_id_table => 'assetServerTable',
    :single_select => 'true'}}
    %thead
      %tr
        %th.center.icon-column{:data => {:field => 'flagged', :formatter => 'flagged_formatter'}}
          %i.fa.fa-star

        - SystemConfig.transam_module_names.each do |mod|
          - if lookup_context.template_exists?("#{mod}_asset_table_head", 'assets', true)
            = render :partial => "assets/#{mod}_asset_table_head"

        %th.center.flag-column{:data => {:field => 'tasks', :formatter => 'tasks_formatter'}}
          %i.fa.fa-flag
        %th.center.flag-column{:data => {:field => 'comments', :formatter => 'comments_formatter'}}
          %i.fa.fa-comments
        %th.center.flag-column{:data => {:field => 'documents', :formatter => 'documents_formatter'}}
          %i.fa.fa-files-o
        %th.center.flag-column{:data => {:field => 'photos', :formatter => 'images_formatter'}}
          %i.fa.fa-image

:javascript

  var manufacturer_id = #{@manufacturer_id.to_i};
  var asset_type = #{@asset_type.to_i};
  var asset_subtype = #{@asset_subtype.to_i};
  var asset_group = #{@asset_group.to_i};
  var org_id = #{@org_id.to_i};
  var path = '#{inventory_path("x")}';

  function row_style(row, index) {
    return 'action-path';
  };

  function query_params(params) {
    if (manufacturer_id > 0) {
      params.manufacturer_id = manufacturer_id;
    }
    if (asset_type > 0) {
      params.asset_type = asset_type;
    }
    if (org_id > 0) {
      params.org_id = org_id;
    }
    if (asset_subtype > 0) {
      params.asset_subtype = asset_subtype;
    }
    if (asset_group > 0) {
      params.asset_group = asset_group;
    }
    console.log(JSON.stringify(params));
    return params;
  }

  $('#asset_server_table').on('click-row.bs.table', function (e, row, $element) {
    var url = path.replace("x", row['object_key']);
    document.location.href = url;
  }).on('post-body.bs.table', function() {
    $('.fixed-table-container').css('min-height', '300px');
    $('#asset_server_table > tbody > tr').addClass('action-path');
  });

  function boolean_formatter(value) {
    if (value) {
      return '<i class="fa fa-check-square-o"></i>';
    } else {
      return '<i class="fa fa-square-o"></i>';
    }
  };
  function integer_formatter(value) {
    if (value) {
      return format("###,###.", value);
    } else {
      return value;
    }
  };
  function currency_formatter(value) {
    if (value) {
      return '$' + integer_formatter(value);
    } else {
      return value;
    }
  };
  function percentage_formatter(value) {
    if (value) {
      return format("##0.##", value) + "%";
    } else {
      return value;
    }
  };

  function date_formatter(value) {
    if (value) {
      var date = new Date(value);
      return date.getMonth() + 1 + "/" + date.getDate() + "/" + date.getFullYear();
    } else {
      return value;
    }
  };

  function flagged_formatter(value) {
    if (value == '1') {
      return '<i class="fa fa-star"></i>';
    } else {
      return '<i class="fa fa-star-o"></i>';
    }
  };
  function tasks_formatter(value) {
    if (value > 0) {
      return '<i class="fa fa-flag"></i>';
    }
    return "";
  };
  function documents_formatter(value) {
    if (value > 0) {
      return '<i class="fa fa-file-o"></i>';
    }
    return "";
  };
  function comments_formatter(value) {
    if (value > 0) {
      return '<i class="fa fa-comments"></i>';
    }
    return "";
  };
  function images_formatter(value) {
    if (value > 0) {
      return '<i class="fa fa-image"></i>';
    }
    return "";
  };

  $(window).resize(function() {
    $('#asset_server_table').bootstrapTable('resetView');
  });
