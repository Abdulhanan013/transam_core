<div class="row-fluid">
	<div class="span12">
		<div class="navbar">
			<div class="navbar-inner">
				<ul class="nav">
					<li>
						<%= form_tag inventory_index_url, :id => 'asset_filter_form', :method => "get", :class => 'navbar-form form-inline' do %>
							<%= hidden_field_tag :asset_type, @asset_type  %>
							<%= hidden_field_tag :asset_subtype, @asset_subtype  %>
							<%= hidden_field_tag :view_type, @view_type  %>
						<div class="input-prepend input-append">
							<span class="add-on">Asset Type</span>
							<%= text_field_tag :filter, @filter, :autocomplete => "off", :class => "ajax-typeahead", :data => {:link => filter_inventory_index_path, :provide => "typeahead"} %>
							<span id = "clear_selection" class="btn add-on">Clear</span>
						</div>
						<% end %>
					</li>
					
					<li class="divider-vertical"></li>
					
					<li class="<%= get_nav_link_class('assets', AssetsController::SESSION_VIEW_TYPE_VAR, AssetsController::VIEW_TYPE_TABLE) %>">
						<%= link_to inventory_index_path(:view_type => AssetsController::VIEW_TYPE_TABLE) do %>
						<i class="fa fa-list-alt"></i> Table View
						<% end %>
					</li>
					<li class="<%= get_nav_link_class('assets', AssetsController::SESSION_VIEW_TYPE_VAR, AssetsController::VIEW_TYPE_MAP) %>">
						<%= link_to inventory_index_path(:view_type => AssetsController::VIEW_TYPE_MAP) do %>
						<i class="fa fa-globe"></i> Map View
						<% end %>
					</li>					

					<li class="divider-vertical"></li>

					<% if @assets.count > 0 %>
					<li>
						<%= link_to inventory_index_path(:format => 'xls'), :data => {:confirm => "Do you want to download these assets as an XLS?"} do %>
						<i class="fa fa-download"></i> Export to Excel
						<% end %>
					</li>
					<% end %>

					<li>
						<%= link_to new_asset_inventory_index_path do %>
						<i class="fa fa-plus"></i> Add Asset
						<% end %>
					</li>
					<li>
						<%= link_to new_search_path do %>
						<i class="fa fa-search"></i> Search
						<% end %>
					</li>

				</ul>
				<%= form_tag inventory_index_path, :id => 'asset_search_form', :method => "get", :class => 'navbar-form form-search pull-right' do %>
				<%= hidden_field_tag :asset_type, @asset_type %>
				<div class="input-append span2">
					<%= text_field_tag :search_text, @search_text, :class => "search-query"%>
					<button type="submit" class="btn">Search</button>
				</div>
				<% end %>

			</div>
		</div>
	</div>
</div>

<script type="text/javascript" charset="utf-8">

  	// Configure UI behaviors
  	var typeahead_delay = <%= Rails.application.config.ui_typeahead_delay %>
  	var typeahead_min_chars = <%= Rails.application.config.ui_typeahead_min_chars %>
  	var typeahead_list_length = <%= Rails.application.config.ui_typeahead_list_length %>
  	var timeout;

	// install a click handler for clearing the selection
	$('#clear_selection').click(function() {
        $('#filter').attr('value', '');
        $('#asset_subtype').attr('value', 0);
        // Submit the form
        $('#asset_filter_form').submit();		
	});
	
	  // Enable typeahead for the filter
	  $('#filter').typeahead({
	      items: typeahead_list_length,
	      minLength: typeahead_min_chars,
	      source: function(query, process) {
	          if (timeout) {
	            clearTimeout(timeout);
	          }
	          timeout = setTimeout(function() {
	            return $.ajax({
	                url: $('#filter').data('link'),
	                type: 'get',
	                data: {
	                  query: query,
	                  asset_type: $('#asset_type').val()
	                },
	                dataType: 'json',
	                success: function(result) {
	  
	                  var resultList = result.map(function (item) {
	                      var aItem = { id: item.id, name: item.name };
	                      return JSON.stringify(aItem);
	                  });
	  
	                  return process(resultList);
	                }
	            });
	          }, typeahead_delay);
	      },
	    matcher: function (obj) {
	        var item = JSON.parse(obj);
	        return ~item.name.toLowerCase().indexOf(this.query.toLowerCase())
	    },
	
	    sorter: function (items) {          
	       var beginswith = [], caseSensitive = [], caseInsensitive = [], item;
	        while (aItem = items.shift()) {
	            var item = JSON.parse(aItem);
	            if (!item.name.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(JSON.stringify(item));
	            else if (~item.name.indexOf(this.query)) caseSensitive.push(JSON.stringify(item));
	            else caseInsensitive.push(JSON.stringify(item));
	        }
	
	        return beginswith.concat(caseSensitive, caseInsensitive)
	
	    },
	
	
	    highlighter: function (obj) {
	        var item = JSON.parse(obj);
	        var query = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&')
	        return item.name.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {
	            return '<strong>' + match + '</strong>'
	        })
	    },
	
	    updater: function (obj) {
	        var item = JSON.parse(obj);
	        	        
	        // Update the UI
	        $('#filter').attr('value', item.name);
	        $('#asset_subtype').attr('value', item.id);
	        // Submit the form
	        $('#asset_filter_form').submit();
	        return item.name;
	    }  
	  });  

</script>
