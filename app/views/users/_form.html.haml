- assignable_roles = Role.roles.map{ |r| [r.label, r.id] if can? :assign, r }.compact
- assignable_privileges = Role.privileges.where('resource_id IS NULL').map{ |r| [r.label, r.id] if can? :assign, r }.compact
- assignable_super_privileges = Role.privileges.where('resource_id IS NOT NULL').map{ |r| [r.id, r.label, r.resource_id] if can? :assign, r }.compact

= simple_form_for(@user,
  :html => {:class => 'form-vertical user_form'},
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
  :radio_buttons => :vertical_radio_and_checkboxes,
  :file => :vertical_file_input,
  :boolean => :vertical_boolean}) do |f|

  %fieldset
    %legend User Details
    - if @organization_list.count > 1
      = f.association :organization, :collection => current_user.organizations, :label_method => 'coded_name'
    - elsif current_user.has_role?(:manager)
      = f.association :organization, :collection => Organization.where(active: true).order(:short_name), :label_method => 'coded_name'
    - else
      = f.association :organization, :placeholder => current_user.organization.id, :as => :hidden

    .row
      .col-lg-6.col-md-6.col-sm-6.col-xs-12
        = f.input :first_name, :placeholder => "User's first name...", :label => "First Name"
      .col-lg-6.col-md-6.col-sm-6.col-xs-12
        = f.input :last_name, :placeholder => "User's last name...", :label => "Last Name"

    = f.input :email, :as => :email, :placeholder => "User's business email address...", :hint => 'Enter only business email addresses'
    .row
      .col-lg-6.col-md-6.col-sm-6.col-xs-12
        = f.input :title, :placeholder => "User's title..."
      .col-lg-6.col-md-6.col-sm-6.col-xs-12
        = f.input :external_id, :placeholder => "User's ID number...", :label => "ID Number"

    - if can? :assign, Role.find_by(name: 'user')
      %fieldset
        %legend Roles & Prvileges

        .row
          .col-lg-6.col-md-6.col-sm-6.col-xs-12
            = f.input :role_ids, :label => "User Role", :collection => assignable_roles, :include_blank => false
            = f.collection_check_boxes :privilege_ids, assignable_super_privileges, :first, :second, :item_wrapper_class => 'checkbox' do |b|
              = b.check_box(:class => 'super-privilege', :data => { resource_id: b.object.third.to_s}) + b.text

          - if assignable_privileges.count > 0
            .col-lg-6.col-md-6.col-sm-6.col-xs-12
              = f.input :privilege_ids, :label => "User Privileges", :collection => assignable_privileges, :as => :check_boxes, :input_html => { :multiple => true }

  %fieldset
    %legend Contact Info

    .row
      .col-lg-4.col-md-4.col-sm-6.col-xs-6
        = f.input :phone, :as => :tel, :placeholder => "Users primary phone number...", :hint => 'Format 123-456-7890'
      .col-lg-2.col-md-2.col-sm-2.col-xs-3
        = f.input :phone_ext, :label => "Ext."
      .col-lg-6col-md-6.col-sm-6.col-xs-6
        = f.input :timezone, :as => :time_zone, priority: /US/, :prompt => "Select timezone..."


    = f.input :address1
    = f.input :address2
    .row
      .col-sm-6
        = f.input :city
      .col-sm-3
        = f.input :state, :as => :select, :collection => Country['US'].states, :include_blank => false
      .col-sm-3
        = f.input :zip

    = f.button :submit, :class => "btn btn-primary"


:javascript

  $(document).ready(function() {
    $('#user_role_ids').change();

  });

  $('#user_role_ids').change(function() {
    $('.super-privilege').each(function(){

      if(parseInt($(this).data('resource-id')) == parseInt($('#user_role_ids').val())) {
        $(this).parent().parent().show(); // get span of checkbox
      } else {
        $(this).parent().parent().hide();
      }
    });

  });

  // Override placement of validator msg on .input-groups
  $.validator.setDefaults({errorPlacement: function(error, element) {
      console.log(element);
      if(element.parents('.input-group').length) {
        error.insertAfter(element.parents('.input-group'));
      } else {
        error.insertAfter(element);
      }
    }
  });
  $('.user_form').validate({
    submitHandler: function(form) {
      form.submit();
    }
  });

  $("#user_zip").rules("add", {
    zipcodeUS: true
  })
  $("#user_email").rules("add", {
    required: true,
    email: true
  })
  $("#user_phone").rules("add", {
    required: true,
    phoneUS: true
  })
