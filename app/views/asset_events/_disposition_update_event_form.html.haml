= render :layout => "update_event_form" do |f|
  = f.input :event_date, :label => 'Date of Disposition', :wrapper => :vertical_append do
    = f.input_field :event_date, :as => :string, :class => 'form-control datepicker', :data => {'behavior' => 'datepicker'}, :value => f.object.event_date.strftime("%m-%d-%Y")
    %span.input-group-addon
      %i.fa.fa-calendar
  = f.association :disposition_type, :label => "Disposition Type"
  = f.input :sales_proceeds, :wrapper => :vertical_prepend, :label => "Sales Proceeds" do
    %span.input-group-addon
      %i.fa.fa-usd
    = f.input :sales_proceeds, :class => 'form-control', :input_html => { :min => 0, :max => 1000000 }, :label => false
  = f.input :new_owner_name, :label => "New Owner Name"
  = f.input :address1, :label => "New Owner Address"
  = f.input :address2, :label => "Address 2"
  .row
    .col-sm-6
      = f.input :city
    .col-sm-3
      = f.input :state, :as => :select, :collection => Country['US'].states, :include_blank => false, :selected => "PA"
    .col-sm-3
      = f.input :zip
  = f.input :comments, :input_html => { :rows => 6 }, :placeholder => "Enter any additional comments..."
  .form-group
    = f.button :submit, "Record disposition", :class => 'btn btn-primary'
:javascript
  $.validator.addMethod(
          "regex",
          function(value, element, regexp) {
              var re = new RegExp(regexp);
              return this.optional(element) || re.test(value);
          },
          "Must be a valid zip code."
  );
  $("input[name='asset_event[zip]']").rules("add", { regex: /^\d{5}([\-]?\d{4})?$/ })