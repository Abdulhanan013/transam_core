:ruby
  # Get the task status types to search for
  tasks = Task.where("assigned_to_user_id = ? AND state IN (?)", current_user.id, ["new", "started", "halted"]).order(:complete_by)
  new_tasks = tasks.where(:state => "new")
  started_tasks = tasks.where(:state => "started")
  on_hold = tasks.where(:state => "halted")

  new_pcnt = new_tasks.count > 0 ? new_tasks.count / tasks.count.to_f * 100.0 : 0
  started_pcnt = started_tasks.count > 0 ? started_tasks.count / tasks.count.to_f * 100.0 : 0
  on_hold_pcnt = on_hold.count > 0 ? on_hold.count / tasks.count.to_f * 100.0 : 0

.col-md-2.col-sm-2
  .panel.panel-default{:style => "height: 200px;overflow-y: auto;"}
    .panel-heading
      .pull-right
        %span.badge= tasks.count
      Tasks
    .panel-body
      - if tasks.empty?
        %p= "No tasks due"
      - else
        = render :partial => 'task_summary_detail', :locals => {:label => 'New', :count => new_tasks.count, :pcnt => new_pcnt, :display_class => 'info'}
        = render :partial => 'task_summary_detail', :locals => {:label => 'Started', :count => started_tasks.count, :pcnt => started_pcnt, :display_class => 'warning'}
        = render :partial => 'task_summary_detail', :locals => {:label => 'On Hold', :count => on_hold.count, :pcnt => on_hold_pcnt, :display_class => 'danger'}
