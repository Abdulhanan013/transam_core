:ruby
  @core_tbl_formatter_load_count ||= 1

:javascript

  function boolean_formatter(value) {
    if (value) {
      return '<i class="fa fa-check"></i>';
    } else {
      return '';
    }
  };

  function integer_formatter(value) {
    if (value == null) {
      return value;
    } else {
      return format("###,##0.", value);
    }
  };

  function currency_formatter(value) {
    if (value == null) {
      return value;
    } else {
      return '$' + integer_formatter(value);
    }
  };

  function percentage_formatter(value) {
    if (value == null) {
      return value;
    } else {
      return format("##0.00", value) + "%";
    }
  };

  function date_formatter(value) {
    if (value) {
      //console.log(value);
      var date = new Date(value);
      //console.log(date);
      var local_date = convertUTCDateToLocalDate(date);
      //console.log(local_date);
      return local_date.getMonth() + 1 + "/" + local_date.getDate() + "/" + local_date.getFullYear();
    } else {
      return value;
    }
  };

  function convertUTCDateToLocalDate(date) {
      var newDate = new Date(date.getTime()+date.getTimezoneOffset()*60*1000);

      var offset = date.getTimezoneOffset() / 60;
      var hours = date.getHours();

      newDate.setHours(hours - offset);

      return newDate;
  };

  function tagged_formatter(value) {
    if (value == '1') {
      return '<i class="fa fa-star"></i>';
    } else {
      return '<i class="fa fa-star-o"></i>';
    }
  };

  function tasks_formatter(value) {
    if (value > 0) {
      return '<i class="fa fa-flag"></i>';
    }
    return "";
  };

  function documents_formatter(value) {
    if (value > 0) {
      return '<i class="fa fa-file-o"></i>';
    }
    return "";
  };

  function comments_formatter(value) {
    if (value > 0) {
      return '<i class="fa fa-comments"></i>';
    }
    return "";
  };

  function images_formatter(value) {
    if (value > 0) {
      return '<i class="fa fa-image"></i>';
    }
    return "";
  };
