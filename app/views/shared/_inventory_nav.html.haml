:ruby
  event_type = EarlyDispositionRequestUpdateEvent.asset_event_type
  can_view_early_disposition = (event_type.active and can?(:manage, EarlyDispositionRequestUpdateEvent))
  early_events = Asset.where(organization_id: @organization_list).joins(:early_disposition_requests).where(asset_events: {state: 'new'}).count
  transferred_assets = Asset.where(organization_id: @organization_list).where('asset_tag = object_key').count

  assets = Asset.operational.where(:organization_id => @organization_list).group(:asset_subtype_id).count

%li{:class => "dropdown #{get_nav_link_class('assets')}"}
  = link_to "#", :class => "dropdown-toggle", :data => {"toggle" => "dropdown"}, :title => 'Inventory' do
    %i.fa.fa-bus.fa-2x
    %b.caret
  %ul.dropdown-menu.columns-5
    .row
      .col-sm-3
        %ul.multi-column-dropdown
          %li.text-left
            = link_to manufacturers_path do
              %i.fa.fa-fw.fa-star
              Manufacturers
          %li.divider
          %li.text-left
            = link_to asset_groups_path do
              %i.fa.fa-tags.fa-fw
              Groups
          - if (early_events > 0 && can_view_early_disposition) || (transferred_assets > 0 && can?(:accept_transfers, Asset))
            %li.divider
            - if early_events > 0 && can_view_early_disposition
              %li.text-left{:style => 'width:255px'}
                = link_to inventory_index_path(:early_disposition => 1) do
                  %i.fa.fa-fw{:class => event_type.display_icon_name}
                  %span.badge.pull-right= early_events
                  Early Disposition Proposed
            - if transferred_assets > 0 && can?(:accept_transfers, Asset)
              %li.text-left{:style => 'width:255px'}
                = link_to inventory_index_path(:transferred_assets => 1) do
                  %i.fa.fa-refresh.fa-fw
                  %span.badge.pull-right= transferred_assets
                  Newly Transferred Assets
          %li.divider
          %li.text-left
            = link_to reset_searches_path(:search_type => SearchesController::ASSET_SEARCH_TYPE) do
              %i.fa.fa-search.fa-fw
              Query
          - SystemConfig.transam_module_names.each do |mod|
            = render :partial => "shared/#{mod}_inventory_nav_first_column" rescue nil
          - if !Policy.where('parent_id IS NOT NULL AND organization_id IN (?)', @organization_list).pluck(:organization_id).empty? && (can? :create, Asset)
            %li.divider
            %li.text-left
              = link_to new_asset_inventory_index_path do
                %i.fa.fa-plus.fa-fw
                Add Asset
            %li.divider
            %li.text-left
              = link_to uploads_path, :style => 'font-weight:bold;' do
                %i.fa.fa-file-excel-o.fa-fw
                Bulk Updates
            %li.text-left.small
              = link_to templates_uploads_path do
                %i.fa.fa-download.fa-fw
                Download Template
            %li.text-left.small
              = link_to new_upload_path do
                %i.fa.fa-upload.fa-fw
                Upload Template
      .col-sm-2
        %ul.multi-column-dropdown
          - AssetType.where(class_name: ['Vehicle', 'SupportVehicle']).order(:id).each_with_index do |type, idx|
            - unless idx == 0
              %li.divider
            = render partial: 'shared/inventory_nav_asset_subtype_menu_item', locals: {type: type, subtypes: assets.select{|k, v| type.asset_subtypes.ids.include? k}}
      .col-sm-2
        %ul.multi-column-dropdown
          - AssetType.where(class_name: ['TransitFacility', 'SupportFacility']).order(:id).each_with_index do |type, idx|
            - unless idx == 0
              %li.divider
            = render partial: 'shared/inventory_nav_asset_subtype_menu_item', locals: {type: type, subtypes: assets.select{|k, v| type.asset_subtypes.ids.include? k}}
      .col-sm-2
        %ul.multi-column-dropdown
          - AssetType.where(class_name: ['RailCar', 'Locomotive']).order(:id).each_with_index do |type, idx|
            - unless idx == 0
              %li.divider
            = render partial: 'shared/inventory_nav_asset_subtype_menu_item', locals: {type: type, subtypes: assets.select{|k, v| type.asset_subtypes.ids.include? k}}
      .col-sm-2
        %ul.multi-column-dropdown
          - AssetType.where(class_name: ['Equipment']).order(:id).each_with_index do |type, idx|
            - unless idx == 0
              %li.divider
            = render partial: 'shared/inventory_nav_asset_subtype_menu_item', locals: {type: type, subtypes: assets.select{|k, v| type.asset_subtypes.ids.include? k}, show_subtypes: 0}
      .col-sm-2
        %ul.multi-column-dropdown
          - AssetType.where.not(class_name: ['Vehicle', 'SupportVehicle', 'TransitFacility', 'SupportFacility', 'RailCar', 'Locomotive', 'Equipment']).each_with_index do |type, idx|
            - unless idx == 0
              %li.divider
            = render partial: 'shared/inventory_nav_asset_subtype_menu_item', locals: {type: type, subtypes: assets.select{|k, v| type.asset_subtypes.ids.include? k}}