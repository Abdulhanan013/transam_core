-# IMPORTANT: add .editable-fields-container to the top level .tab-content container,
-#            in order to let the script locate active tab and enable/disable xeditable fields

:css
  .editable-click, a.editable-click, a.editable-click:hover {
    color: #17406E;
    border-bottom: none;
  }

  .editable-click.editable-disabled, a.editable-click.editable-disabled, a.editable-click.editable-disabled:hover {
    color: #17406E;
  }

  .editable-field {
    pointer-events: none;
  }

  .editableform div, .editable-input input:not([type='checkbox']), .editable-input textarea, .editable-input select.full-width{
    width: 100% !important;
  }

  .editable-buttons {
    display: none;
  }
  
:javascript

  $(function() {
    $.fn.editable.defaults.mode = 'inline';
    $.fn.editable.defaults.clear = false;
    $.fn.editable.defaults.savenochange = true;
    $.fn.editable.defaults.send = 'never';
    $.fn.editable.defaults.onblur = 'ignore';
    $.fn.editable.defaults.disabled = true;
    $.fn.editable.defaults.unsavedclass = null;
    $.fn.editable.defaults.highlight = false;

    // variable to store radio options user selected
    // used to reset them when cancel editing
    var selected_radio_inputs;

    function enable_tab_editing(tab_id) {
      $('#'+tab_id+'.tab-pane .editable-field').editable('enable');
      $('#'+tab_id+'.tab-pane .editable-field').editable('show', false);
      $('#'+tab_id+' input[type=radio]').removeAttr('disabled');
      $('#'+tab_id+'.tab-pane .editable-input').find('input, select').first().focus();

      $('.other-type-container select').each(function() {
        $(this).closest('.other-type-container').attr('data-original-value', $(this).val());
      });
    }

    function disable_tab_editing(tab_id) {
      $('#'+tab_id+' input[type=radio]').attr('disabled', 'true');
      $('#'+tab_id+'.tab-pane .editable-field').editable('hide');
      $('#'+tab_id+'.tab-pane .editable-field').editable('disable');
    }

    function open_tab(tab_id) {
      $('.editableform-loading').hide();
      $('.editableform').show();
      $('a[href="#' + tab_id +'"]').tab('show');
    }

    function get_active_tab_id() {
      return $('.editable-fields-container > .tab-pane.active').attr('id');
    }

    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
      var tab_id = get_active_tab_id();
      if ($('.edit-xeditable-button').is(":hidden")) {
        enable_tab_editing(tab_id);
      } else {
        disable_tab_editing(tab_id);
      }
    });

    $('.edit-xeditable-button').on('click', function(e) {
      e.stopPropagation();

      //set selected radios
      selected_radio_inputs = $(this).closest('.panel').find('input[type=radio]:checked');

      var tab_id = get_active_tab_id();
      enable_tab_editing(tab_id);

      $('.edit-xeditable-button').hide();
      $('.edit-xeditable-buttons').show();
    });

    $('.cancel-xeditable-button').on('click', function(e) {
      e.stopPropagation();

      // reset radios
      if(selected_radio_inputs) {
        selected_radio_inputs.click();
      }

      // reset dropdown show/hide 
      $('.other-type-container').each(function() {
        var original_val = $(this).attr('data-original-value');
        if(original_val != undefined) {
          $(this).find('select').val(original_val).change();
        }
      });

      var tab_id = get_active_tab_id();
      disable_tab_editing(tab_id);

      $('.edit-xeditable-button').show();
      $('.edit-xeditable-buttons').hide();
    });

    $('.save-xeditable-button').click(function() {
       $('form.editableform').submit(); // save values locally, then submit to server
       if($('.has-error .form-control').length == 0) {
         $('.editable-field').editable('submit', {
             ajaxOptions: {
                 type: 'PUT',
                 dataType: 'json' //assuming json response
             },
             success: function(data, config) {
                if(data && data.errors){
                     //server-side validation error, response like {"errors": {"username": "username already exist"} }
                     config.error.call(this, data.errors);
                } else {
                  if(typeof(profile_save_callback) !== 'undefined') {
                    profile_save_callback();
                  } 

                  var tab_id = get_active_tab_id();
                  disable_tab_editing(tab_id);

                  $('.edit-xeditable-button').show();
                  $('.edit-xeditable-buttons').hide();
                }
             },
             error: function(errors) {
                 var msg = '';
                 if(errors && errors.responseText) { //ajax error, errors = xhr object
                     msg = errors.responseText;
                 } else { //validation error (client-side or server-side)
                     $.each(errors, function(k, v) { msg += k+": "+v+"<br>"; });
                 }
                 //$('#msg').removeClass('alert-success').addClass('alert-error').html(msg).show();
                 console.log(msg);
                 alert('We are sorry but something went wrong. Please try again.');
             }
         });
       } else {
        var tab_id = $('.has-error .form-control').parents('.tab-pane').attr('id');
        open_tab(tab_id);
       }
    });

    $('.editable-field.combodate').editable({
        template: 'MMM D YYYY',    
        viewformat: 'MM/DD/YYYY',
        combodate: {
          maxYear: (new Date()).getFullYear(),
          minYear: 1900
        }
    });

    var generic_xeditable_options = {
      validate: function(value) {
        if($(this).hasClass('required')) {
          if($.trim(value) == '') return 'This field is required';
        }
      },
      error: function() {
        return "invalid input or service unavailable";
      }
    };

    var currency_xeditable_options = {
      display: function(value) {
        if($.trim(value) == '') {
          $(this).text('');
        } else {
          var currency_val = Number((parseFloat(value)).toFixed(1)).toLocaleString();
          $(this).text('$ ' + currency_val);
        }
      }
    };
    for(var attr in generic_xeditable_options) {  
      currency_xeditable_options[attr] = generic_xeditable_options[attr];
    } 

    $('.editable-field:not(.currency-number)').editable(generic_xeditable_options);

    $('.editable-field.currency-number').editable(currency_xeditable_options);

    // select all text when editable input shows up so to speed up input
    $('.editable-field').on('shown', function(e, editable) {
      setTimeout( function() {
        editable.input.$input.select();
      }, 10 );
    });

    // click an editable cell to bring up editable-input
    $('.editable-field:not(.editable-disabled)').closest('td').click(function() {
      if (editableActive) return;
      
      var that = this;
      setTimeout(function() {
        $(that).find('.editable-field').editable('show');
        }, 10);
    });

    // if the cell is editable enabled, show up editable input when it gets focus
    $('.editable-field:not(.editable-disabled)').focus(function() {
      $(this).editable('show');
    });

    // show Other text entry only if it's a Other type; otherwise, hide and empty its value
    // type_el: HTML element of the Type dropdown
    // type_id: Type dropdown value
    function show_hide_other_text_entry(type_el, type_id) {
      var other_text_container = $(type_el).parents('.other-fields-container').find('.other-value-container');
      if(other_text_container) {
        var other_ids = $(type_el).parents('.other-type-container').data('other-type-ids');
        var other_edit_field = other_text_container.find('.editable-field');
        if(!other_ids || other_ids.indexOf(type_id) < 0) {
          other_edit_field.editable('setValue', '');
          other_text_container.hide();
        } else {
          other_text_container.show();
          other_edit_field.editable('hide');
          other_edit_field.editable('show', false);
        }
      }

      var dual_text_container = $(type_el).parents('.other-fields-container').find('.dual-value-container');
      if(dual_text_container) {
        var dual_ids = $(type_el).parents('.other-type-container').data('dual-type-ids');
        var duel_edit_field = dual_text_container.find('.editable-field');
        if(!dual_ids || dual_ids.indexOf(type_id) < 0) {
          duel_edit_field.editable('setValue', '');
          dual_text_container.hide();
        } else {
          dual_text_container.show();
          duel_edit_field.editable('hide');
          duel_edit_field.editable('show', false);
        }
      }
    }

    $('body').on('change', '.other-type-container select', function() {
      var type_id = $(this).val();
      if(type_id) {
        type_id = parseInt(type_id);
      }
      show_hide_other_text_entry(this, type_id);
    });

    $('.other-type-container .editable-field').each(function() {
      var type_id = $(this).editable('getValue')[$(this).data('name')];
      if(type_id) {
        type_id = parseInt(type_id);
      }
      show_hide_other_text_entry(this, type_id);
    });
  });

  // https://github.com/vitalets/x-editable/issues/851
  (function() {
      var original = $.fn.editableutils.setCursorPosition;
      $.fn.editableutils.setCursorPosition = function() {
          try {
              original.apply(this, Array.prototype.slice.call(arguments));
          } catch (e) { /* noop */ }
      };
  })();

